import {
  Platform
} from 'react-native'
import {each} from 'lodash'
const fontsAndroid = [
  'normal',
  'notoserif',
  'sans-serif',
  'sans-serif-light',
  'sans-serif-thin',
  'sans-serif-condensed',
  'sans-serif-medium',
  'serif',
  'Roboto',
  'monospace',
  'ITC Lubalin Graph Std',
  'Poppins-ThinItalic',
  'Poppins-Regular',
  'Poppins-Bold'

]

const fontIOS = [
  'Memphis-Medium',
  'LubalinGraphITCbyBT-Bold',
  'San Francisco',
  'Academy Engraved LET',
  'AcademyEngravedLetPlain',
  'Al Nile',
  'AlNile - Bold',
  'American Typewriter',
  'AmericanTypewriter - Bold',
  'AmericanTypewriter - Condensed',
  'AmericanTypewriter - CondensedBold',
  'AmericanTypewriter - CondensedLight',
  'AmericanTypewriter - Light',
  'Apple Color Emoji',
  'Apple SD Gothic Neo',
  'AppleColorEmoji',
  'AppleSDGothicNeo - Bold',
  'AppleSDGothicNeo - Light',
  'AppleSDGothicNeo - Medium',
  'AppleSDGothicNeo - Regular',
  'AppleSDGothicNeo - SemiBold',
  'AppleSDGothicNeo - Thin',
  'AppleSDGothicNeo - UltraLight',
  'Arial',
  'Arial Hebrew',
  'Arial Rounded MT Bold',
  'Arial - BoldItalicMT',
  'Arial - BoldMT',
  'Arial - ItalicMT',
  'ArialHebrew',
  'ArialHebrew - Bold',
  'ArialHebrew - Light',
  'ArialMT',
  'ArialRoundedMTBold',
  'Avenir',
  'Avenir Next',
  'Avenir Next Condensed',
  'Avenir - Black',
  'Avenir - BlackOblique',
  'Avenir - Book',
  'Avenir - BookOblique',
  'Avenir - Heavy',
  'Avenir - HeavyOblique',
  'Avenir - Light',
  'Avenir - LightOblique',
  'Avenir - Medium',
  'Avenir - MediumOblique',
  'Avenir - Oblique',
  'Avenir - Roman',
  'AvenirNext - Bold',
  'AvenirNext - BoldItalic',
  'AvenirNext - DemiBold',
  'AvenirNext - DemiBoldItalic',
  'AvenirNext - Heavy',
  'AvenirNext - HeavyItalic',
  'AvenirNext - Italic',
  'AvenirNext - Medium',
  'AvenirNext - MediumItalic',
  'AvenirNext - Regular',
  'AvenirNext - UltraLight',
  'AvenirNext - UltraLightItalic',
  'AvenirNextCondensed - Bold',
  'AvenirNextCondensed - BoldItalic',
  'AvenirNextCondensed - DemiBold',
  'AvenirNextCondensed - DemiBoldItalic',
  'AvenirNextCondensed - Heavy',
  'AvenirNextCondensed - HeavyItalic',
  'AvenirNextCondensed - Italic',
  'AvenirNextCondensed - Medium',
  'AvenirNextCondensed - MediumItalic',
  'AvenirNextCondensed - Regular',
  'AvenirNextCondensed - UltraLight',
  'AvenirNextCondensed - UltraLightItalic',
  'Bangla Sangam MN',
  'Baskerville',
  'Baskerville - Bold',
  'Baskerville - BoldItalic',
  'Baskerville - Italic',
  'Baskerville - SemiBold',
  'Baskerville - SemiBoldItalic',
  'Bodoni 72',
  'Bodoni 72 Oldstyle',
  'Bodoni 72 Smallcaps',
  'Bodoni Ornaments',
  'BodoniOrnamentsITCTT',
  'BodoniSvtyTwoITCTT - Bold',
  'BodoniSvtyTwoITCTT - Book',
  'BodoniSvtyTwoITCTT - BookIta',
  'BodoniSvtyTwoOSITCTT - Bold',
  'BodoniSvtyTwoOSITCTT - Book',
  'BodoniSvtyTwoSCITCTT - Book',
  'Bradley Hand',
  'BradleyHandITCTT - Bold',
  'Chalkboard SE',
  'ChalkboardSE - Bold',
  'ChalkboardSE - Light',
  'ChalkboardSE - Regular',
  'Chalkduster',
  'Cochin',
  'Cochin - Bold',
  'Cochin - BoldItalic',
  'Cochin - Italic',
  'Copperplate',
  'Copperplate - Bold',
  'Copperplate - Light',
  'Courier',
  'Courier New',
  'Courier - Bold',
  'Courier - BoldOblique',
  'Courier - Oblique',
  'CourierNewPS - BoldItalicMT',
  'CourierNewPS - BoldMT',
  'CourierNewPS - ItalicMT',
  'CourierNewPSMT',
  'Damascus',
  'DamascusBold',
  'DamascusLight',
  'DamascusMedium',
  'DamascusSemiBold',
  'Devanagari Sangam MN',
  'DevanagariSangamMN',
  'DevanagariSangamMN - Bold',
  'Didot',
  'Didot - Bold',
  'Didot - Italic',
  'DiwanMishafi',
  'Euphemia UCAS',
  'EuphemiaUCAS - Bold',
  'EuphemiaUCAS - Italic',
  'Farah',
  'Futura',
  'Futura - CondensedExtraBold',
  'Futura - CondensedMedium',
  'Futura - Medium',
  'Futura - MediumItalic',
  'Geeza Pro',
  'GeezaPro - Bold',
  'Georgia',
  'Georgia - Bold',
  'Georgia - BoldItalic',
  'Georgia - Italic',
  'Gill Sans',
  'GillSans - Bold',
  'GillSans - BoldItalic',
  'GillSans - Italic',
  'GillSans - Light',
  'GillSans - LightItalic',
  'GillSans - SemiBold',
  'GillSans - SemiBoldItalic',
  'GillSans - UltraBold',
  'Gujarati Sangam MN',
  'GujaratiSangamMN',
  'GujaratiSangamMN - Bold',
  'Gurmukhi MN',
  'GurmukhiMN - Bold',
  'Heiti SC',
  'Heiti TC',
  'Helvetica',
  'Helvetica Neue',
  'Helvetica - Bold',
  'Helvetica - BoldOblique',
  'Helvetica - Light',
  'Helvetica - LightOblique',
  'Helvetica - Oblique',
  'HelveticaNeue - Bold',
  'HelveticaNeue - BoldItalic',
  'HelveticaNeue - CondensedBlack',
  'HelveticaNeue - CondensedBold',
  'HelveticaNeue - Italic',
  'HelveticaNeue - Light',
  'HelveticaNeue - LightItalic',
  'HelveticaNeue - Medium',
  'HelveticaNeue - MediumItalic',
  'HelveticaNeue - Thin',
  'HelveticaNeue - ThinItalic',
  'HelveticaNeue - UltraLight',
  'HelveticaNeue - UltraLightItalic',
  'Menlo',
  'Menlo - Bold',
  'Menlo - BoldItalic',
  'Menlo - Italic',
  'Menlo - Regular',
  'Optima',
  'Optima - Bold',
  'Optima - BoldItalic',
  'Optima - ExtraBlack',
  'Optima - Italic',
  'Optima - Regular',
  'Oriya Sangam MN',
  'OriyaSangamMN',
  'OriyaSangamMN - Bold',
  'Palatino',
  'Palatino - Bold',
  'Palatino - BoldItalic',
  'Palatino - Italic',
  'Palatino - Roman',
  'Papyrus',
  'Papyrus - Condensed',
  'Party LET',
  'Symbol',
  'Tamil Sangam MN',
  'TamilSangamMN - Bold',
  'Telugu Sangam MN',
  'Thonburi',
  'Thonburi - Bold',
  'Thonburi - Light',
  'Times New Roman',
  'TimesNewRomanPS - BoldItalicMT',
  'TimesNewRomanPS - BoldMT',
  'TimesNewRomanPS - ItalicMT',
  'TimesNewRomanPSMT',
  'Trebuchet MS',
  'Trebuchet - BoldItalic',
  'TrebuchetMS - Bold',
  'TrebuchetMS - Italic',
  'Verdana',
  'Verdana - Bold',
  'Verdana - BoldItalic',
  'Verdana - Italic',
  'Zapf Dingbats',
  'ZapfDingbatsITC',
  'Zapfino'
]

const mappedFonts = (fontsList) => {
  const fonts = []
  each(fontsList, (fontName, key) => {
    fonts[`font-family-${fontName.replace(/\s/g, '-').toLowerCase()}`] = {fontFamily: fontName}
  })
  if (Platform.OS === 'ios') {
    fonts['font-family-itc-lubalin-graph-std'] = {fontFamily: 'LubalinGraphITCbyBT-Bold'}
  }
  return fonts
}

export default mappedFonts(Platform.OS === 'ios' ? fontIOS : fontsAndroid)
